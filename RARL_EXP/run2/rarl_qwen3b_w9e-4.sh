#!/bin/bash
set -x
max_tokens=20480
n_nodes=1
total_epochs=1
total_steps=300

export HYDRA_FULL_ERROR=1
export WANDB_API_KEY="85e14f750c46ca9436de0aacd93aa7664448c30c"
export ACCELERATE_LOG_LEVEL=info

DATA_HOME=/workspace/RARL_dataset
model_path=/mnt_out/songyanh/models/Qwen2.5-3B
train_path="${DATA_HOME}/train/NuminaMath342k.parquet"
numina_test_path="${DATA_HOME}/test/numina_test.parquet"
math500_test_path="${DATA_HOME}/test/math500.parquet"
aime24_test_path="${DATA_HOME}/test/aime24.parquet"
aime25_test_path="${DATA_HOME}/test/aime25.parquet"
amc_test_path="${DATA_HOME}/test/amc.parquet"

train_files="['$train_path']"
test_files="['$numina_test_path','$math500_test_path','$aime24_test_path','$aime25_test_path','$amc_test_path']"
layer=20
loss_weight=0.0009
run_name=ep${total_epochs}_step${total_steps}_w${loss_weight}
save_root=/mnt_out/songyanh/logs/RARL_results/Qwen2.5-3B/${run_name}
export WANDB_DIR=/mnt_out/songyanh/logs/RARL_results/wandb_log/${run_name}
export TENSORBOARD_DIR=/mnt_out/songyanh/logs/RARL_results/tensorboard_log/${run_name}
mkdir -p ${save_root}

PYTHONUNBUFFERED=1 python3 -m verl.trainer.main_ppo \
    algorithm.adv_estimator=grpo \
    data.train_files="$train_files" \
    data.val_files="$test_files" \
    data.train_batch_size=512 \
    data.max_prompt_length=512 \
    data.max_golden_response_length=2048 \
    data.max_response_length=4096 \
    data.filter_overlong_prompts=True \
    data.filter_overlong_prompts_workers=64 \
    data.truncation='error' \
    data.return_full_prompt=True \
    actor_rollout_ref.model.path=${model_path} \
    actor_rollout_ref.model.use_fused_kernels=False \
    actor_rollout_ref.actor.optim.lr=1e-6 \
    actor_rollout_ref.actor.clip_ratio_low=0.2 \
    actor_rollout_ref.actor.clip_ratio_high=0.28 \
    actor_rollout_ref.actor.clip_ratio_c=10.0 \
    actor_rollout_ref.actor.optim.warmup_style=cosine \
    actor_rollout_ref.actor.optim.lr_warmup_steps=10 \
    actor_rollout_ref.actor.optim.weight_decay=0.1 \
    actor_rollout_ref.actor.grad_clip=1.0 \
    actor_rollout_ref.model.use_remove_padding=True \
    actor_rollout_ref.actor.use_kl_loss=False \
    actor_rollout_ref.actor.kl_loss_coef=0.0 \
    actor_rollout_ref.actor.kl_loss_type=low_var_kl \
    actor_rollout_ref.actor.use_dynamic_bsz=True \
    actor_rollout_ref.actor.ppo_mini_batch_size=64 \
    actor_rollout_ref.actor.ppo_max_token_len_per_gpu=$max_tokens \
    actor_rollout_ref.actor.entropy_coeff=0 \
    actor_rollout_ref.actor.checkpoint.save_contents=['model','extra'] \
    actor_rollout_ref.model.enable_gradient_checkpointing=True \
    actor_rollout_ref.actor.fsdp_config.param_offload=False \
    actor_rollout_ref.actor.fsdp_config.optimizer_offload=False \
    actor_rollout_ref.rollout.name=vllm \
    actor_rollout_ref.rollout.gpu_memory_utilization=0.8 \
    actor_rollout_ref.rollout.max_num_batched_tokens=133120 \
    actor_rollout_ref.rollout.log_prob_use_dynamic_bsz=True \
    actor_rollout_ref.rollout.n=8 \
    actor_rollout_ref.rollout.tensor_model_parallel_size=1 \
    actor_rollout_ref.ref.fsdp_config.param_offload=True \
    actor_rollout_ref.rollout.temperature=1.0 \
    actor_rollout_ref.rollout.top_p=1.0 \
    actor_rollout_ref.rollout.top_k=-1 \
    actor_rollout_ref.rollout.val_kwargs.temperature=0.6 \
    actor_rollout_ref.rollout.val_kwargs.top_p=0.7 \
    actor_rollout_ref.rollout.val_kwargs.top_k=-1 \
    actor_rollout_ref.rollout.val_kwargs.do_sample=True \
    actor_rollout_ref.rollout.val_kwargs.n=8 \
    algorithm.use_kl_in_reward=False \
    trainer.critic_warmup=0 \
    trainer.val_before_train=True \
    trainer.n_gpus_per_node=8 \
    trainer.nnodes=${n_nodes} \
    trainer.logger=['console','wandb','tensorboard'] \
    trainer.project_name=RARL-Qwen2.5-3B \
    trainer.experiment_name=${run_name} \
    trainer.save_freq=20 \
    trainer.test_freq=20 \
    trainer.resume_mode=disable \
    trainer.total_epochs=${total_epochs} \
    trainer.total_training_steps=${total_steps} \
    trainer.default_local_dir=${save_root}/model \
    trainer.rollout_data_dir=${save_root}/rollout \
    trainer.validation_data_dir=${save_root}/val_data \
    actor_rollout_ref.actor.get_hidden_state=True \
    actor_rollout_ref.actor.layer_list=[$layer] \
    actor_rollout_ref.actor.use_golden_loss=True \
    actor_rollout_ref.actor.golden_loss_weight=${loss_weight} \
    data.tokenizer_golden_answer=True \
    actor_rollout_ref.actor.align_type=answer_tokens \
    actor_rollout_ref.actor.loss_type=dtw_cosine > ${save_root}/log.txt